# Generated by Django 3.1.2 on 2020-12-02 10:37

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shop', '0093_auto_20201202_1042'),
    ]

    operations = [
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(default='column', max_length=250, verbose_name='имя модели')),
                ('url', models.SlugField(max_length=200, unique=True, verbose_name='url')),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('description', models.TextField(verbose_name='Описание')),
                ('security', models.CharField(max_length=5, verbose_name='Гарантия')),
                ('manufacture', models.CharField(max_length=200, verbose_name='Страна производитель')),
                ('type', models.CharField(default='Колонки', max_length=150, verbose_name='Тип изделия')),
                ('model', models.CharField(max_length=100, verbose_name='Модель')),
                ('format', models.CharField(default='2.0', max_length=100, verbose_name='Формат системы')),
                ('color', models.CharField(default='чёрный', max_length=100, verbose_name='Цвет')),
                ('power', models.CharField(default='', max_length=100, verbose_name='Мощность')),
                ('min_playback_frequency', models.CharField(default='', max_length=100, verbose_name='Мин частота воспроизведения (Гц)')),
                ('max_playback_frequency', models.CharField(default='', max_length=100, verbose_name='Мах частота воспроизведения (Гц)')),
                ('signal_noise', models.CharField(default='', max_length=100, verbose_name='Соотношение сигнал/шум')),
                ('type_wired_connection', models.CharField(default='', max_length=100, verbose_name='Тип проводного соединения')),
                ('wireless_connection', models.CharField(default='', max_length=100, verbose_name='Беспроводное подключение')),
                ('bluetooth', models.CharField(default='', max_length=100, verbose_name='Версия Bluetooth')),
                ('interface_USB', models.CharField(default='', max_length=100, verbose_name='Интерфейс USB Type A(для флешки)')),
                ('analog_connector', models.CharField(default='', max_length=100, verbose_name='Аналоговые разъёмы')),
                ('power_front_column', models.CharField(default='', max_length=100, verbose_name='Мощность фронтальных колонок')),
                ('material_front_column', models.CharField(default='', max_length=100, verbose_name='Материал корпуса фронтальных колонок')),
                ('width', models.CharField(default='', max_length=100, verbose_name='Ширина фронтальных колонок')),
                ('height', models.CharField(default='', max_length=100, verbose_name='Высота фронтальных колонок')),
                ('depth', models.CharField(default='', max_length=100, verbose_name='Глубина фронтальных колонок')),
                ('massa', models.CharField(default='', max_length=100, verbose_name='Вес двух колонок')),
                ('shop', models.CharField(default='есть', max_length=150, verbose_name='Наличие в магазине')),
                ('review', models.IntegerField(default=0, verbose_name='Кол-во отзывов')),
            ],
            options={
                'verbose_name': 'Колонки',
                'verbose_name_plural': 'Колонки',
            },
        ),
        migrations.CreateModel(
            name='Headphone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(default='headphone', max_length=250, verbose_name='имя модели')),
                ('url', models.SlugField(max_length=200, unique=True, verbose_name='url')),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('description', models.TextField(verbose_name='Описание')),
                ('security', models.CharField(default='', max_length=5, verbose_name='Гарантия')),
                ('manufacture', models.CharField(max_length=200, verbose_name='Страна производитель')),
                ('type', models.CharField(default='Наушники', max_length=150, verbose_name='Тип изделия')),
                ('model', models.CharField(max_length=100, verbose_name='Модель')),
                ('color', models.CharField(default='', max_length=100, verbose_name='Основной цвет')),
                ('gaming_headphone', models.CharField(default='', max_length=100, verbose_name='Игровые наушники')),
                ('signal_transmission', models.CharField(default='', max_length=100, verbose_name='Способ передачи сигнала')),
                ('design_type', models.CharField(default='', max_length=100, verbose_name='Тип конструкции')),
                ('format', models.CharField(default='2.0', max_length=100, verbose_name='Формат звуковой схемы')),
                ('headset_function', models.CharField(default='чёрный', max_length=100, verbose_name='Функция гарнитуры')),
                ('microphone', models.CharField(default='чёрный', max_length=100, verbose_name='Микрофон')),
                ('type_acoustic_design', models.CharField(default='', max_length=100, verbose_name='Тип акустического оформления')),
                ('min_reproducible_frequency', models.CharField(default='', max_length=100, verbose_name='Мин воспроизводимая частота')),
                ('max_reproducible_frequency', models.CharField(default='', max_length=100, verbose_name='Мах воспроизводимая частота')),
                ('type_wired_connection', models.CharField(default='', max_length=100, verbose_name='Тип проводного соединения')),
                ('detachable_cable', models.CharField(default='', max_length=100, verbose_name='Отсоединяемый кабель')),
                ('cable_length', models.CharField(default='', max_length=100, verbose_name='Длина кабеля')),
                ('shape_cable_plug', models.CharField(default='', max_length=100, verbose_name='Форма штекера кабеля')),
                ('shop', models.CharField(default='есть', max_length=150, verbose_name='Наличие в магазине')),
                ('review', models.IntegerField(default=0, verbose_name='Кол-во отзывов')),
            ],
            options={
                'verbose_name': 'Наушники',
                'verbose_name_plural': 'Наушники',
            },
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(default='motherboard', max_length=250, verbose_name='имя модели')),
                ('url', models.SlugField(max_length=200, unique=True, verbose_name='url')),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('description', models.TextField(verbose_name='Описание')),
                ('security', models.CharField(default='', max_length=5, verbose_name='Гарантия')),
                ('manufacture', models.CharField(max_length=200, verbose_name='Страна производитель')),
                ('type', models.CharField(default='материнская плата', max_length=150, verbose_name='Тип устройства')),
                ('model', models.CharField(max_length=100, verbose_name='Модель')),
                ('year', models.CharField(default='', max_length=100, verbose_name='Год релиза')),
                ('form_factor', models.CharField(default='', max_length=100, verbose_name='Форм-фактор')),
                ('socket', models.CharField(default='', max_length=100, verbose_name='Сокет')),
                ('chipset', models.CharField(default='', max_length=100, verbose_name='Чипсет')),
                ('type_memory', models.CharField(default='', max_length=100, verbose_name='Тип поддерживаемой памяти')),
                ('slot_memory', models.CharField(default='', max_length=100, verbose_name='Кол-во слотов памяти')),
                ('volume_memory', models.CharField(default='', max_length=100, verbose_name='Мак объём памяти')),
                ('PCI_Express', models.CharField(default='', max_length=100, verbose_name='Версия PCI Express')),
                ('slot_PCI', models.CharField(default='', max_length=100, verbose_name='Кол-во слотов PCI')),
                ('sound', models.CharField(default='', max_length=100, verbose_name='Звук')),
                ('chipset_sound', models.CharField(default='', max_length=100, verbose_name='Чипсет звукового адаптера')),
                ('network_adapter_chipset', models.CharField(default='', max_length=100, verbose_name='Чипсет сетевого адаптера')),
                ('speed_network_adapter', models.CharField(default='', max_length=100, verbose_name='Скорость сетевого адаптера')),
                ('main_power_connector', models.CharField(default='', max_length=100, verbose_name='Основной разъём питания')),
                ('processor_power_connector', models.CharField(default='', max_length=100, verbose_name='Разъём питания процессора')),
                ('shop', models.CharField(default='есть', max_length=150, verbose_name='Наличие в магазине')),
                ('review', models.IntegerField(default=0, verbose_name='Кол-во отзывов')),
            ],
            options={
                'verbose_name': 'Материнская плата',
                'verbose_name_plural': 'Материнская плата',
            },
        ),
        migrations.CreateModel(
            name='Notebook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(default='notebook', max_length=250, verbose_name='имя модели')),
                ('url', models.SlugField(max_length=200, unique=True, verbose_name='url')),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('description', models.TextField(verbose_name='Описание')),
                ('security', models.CharField(default='', max_length=5, verbose_name='Гарантия')),
                ('type', models.CharField(default='ноубтук', max_length=150, verbose_name='Тип устройства')),
                ('os', models.CharField(default='', max_length=100, verbose_name='Операционная система')),
                ('model', models.CharField(default='', max_length=100, verbose_name='Модель')),
                ('color', models.CharField(default='', max_length=100, verbose_name='Основной цвет')),
                ('code', models.CharField(default='', max_length=100, verbose_name='Код производителя')),
                ('year', models.CharField(default='', max_length=100, verbose_name='Год релиза')),
                ('screen_type', models.CharField(default='', max_length=100, verbose_name='Тип экрана')),
                ('screen_diagonal', models.CharField(default='', max_length=100, verbose_name='Диагональ экрана')),
                ('screen_resolution', models.CharField(default='', max_length=100, verbose_name='Разрешение экрана')),
                ('pixel_density', models.CharField(default='', max_length=100, verbose_name='Плотность пикселей')),
                ('screen_cover', models.CharField(default='', max_length=100, verbose_name='Покрытие экрана')),
                ('manufacture_processor', models.CharField(default='', max_length=100, verbose_name='Производитель процессора')),
                ('model_processor', models.CharField(default='', max_length=100, verbose_name='Модель процессора')),
                ('core_processor', models.CharField(default='', max_length=100, verbose_name='Кол-во ядер процессора')),
                ('max_thread', models.CharField(default='', max_length=100, verbose_name='Мак число потоков')),
                ('type_RAM', models.CharField(default='', max_length=100, verbose_name='Тип оперативной памяти')),
                ('frequency_RAM', models.CharField(default='', max_length=100, verbose_name='Частота оперативной памяти')),
                ('size_RAM', models.CharField(default='', max_length=100, verbose_name='Размер оперативной памяти')),
                ('type_graphic_accelerator', models.CharField(default='', max_length=100, verbose_name='Вид графического ускорителя')),
                ('manufacture_chip', models.CharField(default='', max_length=100, verbose_name='Производитель видеочипа')),
                ('model_videocard', models.CharField(default='', max_length=100, verbose_name='Модель встроенной видеокарты')),
                ('HDD', models.CharField(default='', max_length=100, verbose_name='Общий объём жёстких дисков (HDD)')),
                ('SSD', models.CharField(default='', max_length=100, verbose_name='Общий объём твердотельных накопителей (SSD)')),
                ('storage_configuration', models.CharField(default='', max_length=100, verbose_name='Конфигурация накопителей')),
                ('type_battery', models.CharField(default='', max_length=100, verbose_name='Тип аккумулятора')),
                ('battery_capacity', models.CharField(default='', max_length=100, verbose_name='Ёмкость аккумулятора мА*ч')),
                ('time_job', models.CharField(default='', max_length=100, verbose_name='Приблизительное время работы')),
                ('width', models.CharField(default='50 см', max_length=100, verbose_name='Ширина')),
                ('height', models.CharField(default='50 см', max_length=100, verbose_name='Высота')),
                ('depth', models.CharField(default='50 см', max_length=100, verbose_name='Глубина')),
                ('massa', models.CharField(default='50 кг', max_length=100, verbose_name='Вес')),
                ('shop', models.CharField(default='есть', max_length=150, verbose_name='Наличие в магазине')),
                ('review', models.IntegerField(default=0, verbose_name='Кол-во отзывов')),
            ],
            options={
                'verbose_name': 'Ноутбук',
                'verbose_name_plural': 'Ноутбуки',
            },
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(default='processor', max_length=250, verbose_name='имя модели')),
                ('url', models.SlugField(max_length=200, unique=True, verbose_name='url')),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('description', models.TextField(verbose_name='Описание')),
                ('security', models.CharField(default='', max_length=5, verbose_name='Гарантия')),
                ('manufacture', models.CharField(max_length=200, verbose_name='Страна производитель')),
                ('type', models.CharField(default='процессор', max_length=150, verbose_name='Тип устройства')),
                ('model', models.CharField(max_length=100, verbose_name='Модель')),
                ('generation_processor', models.CharField(default='', max_length=100, verbose_name='Поколение процессоров')),
                ('code', models.CharField(max_length=100, verbose_name='Код производителя')),
                ('year', models.CharField(default='', max_length=100, verbose_name='Год релиза')),
                ('socket', models.CharField(default='', max_length=100, verbose_name='Сокет')),
                ('core', models.CharField(default='', max_length=100, verbose_name='Ядро')),
                ('number_core', models.CharField(default='', max_length=100, verbose_name='Кол-во ядер')),
                ('max_thread', models.CharField(default='', max_length=100, verbose_name='Мак число потоков')),
                ('frequency_processor', models.CharField(default='', max_length=100, verbose_name='Базовая частота процессора (МГц)')),
                ('type_memory', models.CharField(default='', max_length=100, verbose_name='Тип памяти')),
                ('max_volume_memory', models.CharField(default='', max_length=100, verbose_name='Мак поддерживаемый объём памяти')),
                ('min_frequency_RAM', models.CharField(default='', max_length=100, verbose_name='Мин частота оперативной памяти')),
                ('max_frequency_RAM', models.CharField(default='', max_length=100, verbose_name='Мак частота оперативной памяти')),
                ('TDP', models.CharField(default='', max_length=100, verbose_name='Тепловыделение(TDP)')),
                ('max_temperature', models.CharField(default='', max_length=100, verbose_name='Мак температура процессора')),
                ('shop', models.CharField(default='есть', max_length=150, verbose_name='Наличие в магазине')),
                ('review', models.IntegerField(default=0, verbose_name='Кол-во отзывов')),
            ],
            options={
                'verbose_name': 'Процессор',
                'verbose_name_plural': 'Процессор',
            },
        ),
        migrations.CreateModel(
            name='RAMMemory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(default='rammemory', max_length=250, verbose_name='имя модели')),
                ('url', models.SlugField(max_length=200, unique=True, verbose_name='url')),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('description', models.TextField(verbose_name='Описание')),
                ('security', models.CharField(default='', max_length=5, verbose_name='Гарантия')),
                ('manufacture', models.CharField(max_length=200, verbose_name='Страна производитель')),
                ('type', models.CharField(default='оперативная память', max_length=150, verbose_name='Тип устройства')),
                ('model', models.CharField(default='', max_length=100, verbose_name='Модель')),
                ('code', models.CharField(default='', max_length=100, verbose_name='Код производителя')),
                ('year', models.CharField(default='', max_length=100, verbose_name='Год релиза')),
                ('type_memory', models.CharField(default='', max_length=100, verbose_name='Тип памяти')),
                ('total_sum_memory', models.CharField(default='', max_length=100, verbose_name='Суммарный объём памяти всего комплекта')),
                ('number_module', models.CharField(default='', max_length=100, verbose_name='Кол-во модулей в комплекте')),
                ('frequency', models.CharField(default='', max_length=100, verbose_name='Частота')),
                ('bandwidth', models.CharField(default='', max_length=100, verbose_name='Пропускная способность')),
                ('cl', models.CharField(default='', max_length=100, verbose_name='CAS Latency (CL)')),
                ('trcd', models.CharField(default='', max_length=100, verbose_name='RAS to CAS Delay (tRCD)')),
                ('trp', models.CharField(default='', max_length=100, verbose_name='Row Precharge Delay (tRP)')),
                ('tras', models.CharField(default='', max_length=100, verbose_name='Activate to Precharge Delay (tRAS)')),
                ('shop', models.CharField(default='есть', max_length=150, verbose_name='Наличие в магазине')),
                ('review', models.IntegerField(default=0, verbose_name='Кол-во отзывов')),
            ],
            options={
                'verbose_name': 'Оперативная память',
                'verbose_name_plural': 'Оперативная память',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(default='server', max_length=250, verbose_name='имя модели')),
                ('url', models.SlugField(max_length=200, unique=True, verbose_name='url')),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('description', models.TextField(verbose_name='Описание')),
                ('security', models.CharField(default='', max_length=5, verbose_name='Гарантия')),
                ('manufacture', models.CharField(max_length=200, verbose_name='Страна производитель')),
                ('type', models.CharField(default='сервер', max_length=150, verbose_name='Тип устройства')),
                ('model', models.CharField(max_length=100, verbose_name='Модель')),
                ('form_factor', models.CharField(default='', max_length=100, verbose_name='Форм-фактор сервера')),
                ('processor_socket', models.CharField(default='', max_length=100, verbose_name='Процессорные сокеты')),
                ('max_sum_RAM', models.CharField(default='', max_length=100, verbose_name='Мак возможный суммарный объём ОЗУ')),
                ('storage_interface', models.CharField(default='', max_length=100, verbose_name='Интерфейс накопителей')),
                ('manufacture_processor', models.CharField(default='', max_length=100, verbose_name='Производитель процессоров')),
                ('model_processor', models.CharField(default='', max_length=100, verbose_name='Модель процессоров')),
                ('base_frequency', models.CharField(default='', max_length=100, verbose_name='Базовая частота')),
                ('typr_RAM', models.CharField(default='', max_length=100, verbose_name='Тип оперативной памяти')),
                ('volume_RAM', models.CharField(default='', max_length=100, verbose_name='Объём установленной оперативной памяти')),
                ('frequency_RAM', models.CharField(default='', max_length=100, verbose_name='Частота оперативной памяти')),
                ('type_installed_drives', models.CharField(default='', max_length=100, verbose_name='Тип установленных накопителей')),
                ('storage_capacity', models.CharField(default='', max_length=100, verbose_name='Объём установленных накопителей')),
                ('width', models.CharField(default='50 см', max_length=100, verbose_name='Ширина')),
                ('height', models.CharField(default='50 см', max_length=100, verbose_name='Высота')),
                ('depth', models.CharField(default='50 см', max_length=100, verbose_name='Глубина')),
                ('massa', models.CharField(default='50 кг', max_length=100, verbose_name='Вес')),
                ('shop', models.CharField(default='есть', max_length=150, verbose_name='Наличие в магазине')),
                ('review', models.IntegerField(default=0, verbose_name='Кол-во отзывов')),
            ],
            options={
                'verbose_name': 'Сервер',
                'verbose_name_plural': 'Сервер',
            },
        ),
        migrations.CreateModel(
            name='SystemUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(default='systemunit', max_length=250, verbose_name='имя модели')),
                ('url', models.SlugField(max_length=200, unique=True, verbose_name='url')),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('description', models.TextField(verbose_name='Описание')),
                ('security', models.CharField(default='', max_length=5, verbose_name='Гарантия')),
                ('manufacture', models.CharField(max_length=200, verbose_name='Страна производитель')),
                ('type', models.CharField(default='системный блок', max_length=150, verbose_name='Тип устройства')),
                ('model', models.CharField(max_length=100, verbose_name='Модель')),
                ('color', models.CharField(default='', max_length=100, verbose_name='Основной цвет')),
                ('form_factor', models.CharField(default='', max_length=100, verbose_name='Форм-факто корпуса')),
                ('OS', models.CharField(default='', max_length=100, verbose_name='Операционная система')),
                ('model_processor', models.CharField(default='', max_length=100, verbose_name='Модель процессора')),
                ('core_processor', models.CharField(default='', max_length=100, verbose_name='Кол-во ядер процессора')),
                ('frequency_processor', models.CharField(default='', max_length=100, verbose_name='Частота процессора')),
                ('type_videocard', models.CharField(default='', max_length=100, verbose_name='Тип видео карты')),
                ('manufacture_chip', models.CharField(default='', max_length=100, verbose_name='Производитель видеочипа')),
                ('model_videocard', models.CharField(default='', max_length=100, verbose_name='Модель интегрированной видеокарты')),
                ('type_RAM', models.CharField(default='', max_length=100, verbose_name='Тип оперативноё памяти')),
                ('size_RAM', models.CharField(default='', max_length=100, verbose_name='Размер оперативной памяти')),
                ('HDD', models.CharField(default='', max_length=100, verbose_name='Общий объём жёстких дисков (HDD)')),
                ('SSD', models.CharField(default='', max_length=100, verbose_name='Общий объём твердотельных накопителей (SSD)')),
                ('storage_configuration', models.CharField(default='', max_length=100, verbose_name='Конфигурация накопителей')),
                ('video_interface', models.CharField(default='', max_length=100, verbose_name='Видео интерфейсы')),
                ('interface_periphery', models.CharField(default='', max_length=100, verbose_name='Интерфейсы переферии')),
                ('width', models.CharField(default='50 см', max_length=100, verbose_name='Ширина')),
                ('height', models.CharField(default='50 см', max_length=100, verbose_name='Высота')),
                ('depth', models.CharField(default='50 см', max_length=100, verbose_name='Глубина')),
                ('massa', models.CharField(default='50 кг', max_length=100, verbose_name='Вес')),
                ('shop', models.CharField(default='есть', max_length=150, verbose_name='Наличие в магазине')),
                ('review', models.IntegerField(default=0, verbose_name='Кол-во отзывов')),
            ],
            options={
                'verbose_name': 'Системный блок',
                'verbose_name_plural': 'Системные блоки',
            },
        ),
        migrations.CreateModel(
            name='VideoCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(default='videocard', max_length=250, verbose_name='имя модели')),
                ('url', models.SlugField(max_length=200, unique=True, verbose_name='url')),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('description', models.TextField(verbose_name='Описание')),
                ('security', models.CharField(default='', max_length=5, verbose_name='Гарантия')),
                ('manufacture', models.CharField(max_length=200, verbose_name='Страна производитель')),
                ('type', models.CharField(default='видеокарта', max_length=150, verbose_name='Тип изделия')),
                ('model', models.CharField(default='', max_length=100, verbose_name='Модель')),
                ('year', models.CharField(default='', max_length=100, verbose_name='Год релиза')),
                ('color', models.CharField(default='чёрный', max_length=100, verbose_name='Цвет')),
                ('range_graphic_processor', models.CharField(default='', max_length=100, verbose_name='Линейка графических процессоров')),
                ('graphic_processor', models.CharField(default='', max_length=100, verbose_name='Графический процессор')),
                ('videochip', models.CharField(default='', max_length=100, verbose_name='Кол-во видеочипов')),
                ('frequency_videochip', models.CharField(default='', max_length=100, verbose_name='Штатная частота работы видеочипа(МГц)')),
                ('temperature_processor', models.CharField(default='', max_length=100, verbose_name='Мах температура процессора')),
                ('ray_tracing', models.CharField(default='', max_length=100, verbose_name='Поддержка трассировки лучей')),
                ('volume_video_memory', models.CharField(default='', max_length=100, verbose_name='Объём видеопамяти')),
                ('type_memory', models.CharField(default='', max_length=100, verbose_name='Тип памяти')),
                ('frequency_memory', models.CharField(default='', max_length=100, verbose_name='Эффективная частота памяти(МГц)')),
                ('interface_connection', models.CharField(default='', max_length=100, verbose_name='Интерфейс подключения')),
                ('PCI_Express', models.CharField(default='', max_length=100, verbose_name='Версия PCI Express')),
                ('max_power_consumption', models.CharField(default='', max_length=100, verbose_name='Мак энергопотребление')),
                ('power_supply', models.CharField(default='', max_length=100, verbose_name='Рекомендуемый блок питания')),
                ('height', models.CharField(default='', max_length=100, verbose_name='Длина видеокарты')),
                ('width', models.CharField(default='', max_length=100, verbose_name='Толщина видеокарты')),
                ('shop', models.CharField(default='есть', max_length=150, verbose_name='Наличие в магазине')),
                ('review', models.IntegerField(default=0, verbose_name='Кол-во отзывов')),
            ],
            options={
                'verbose_name': 'Видео карта',
                'verbose_name_plural': 'Видео карта',
            },
        ),
        migrations.AlterModelOptions(
            name='brackettv',
            options={'verbose_name': 'Кранштейн для телевизора', 'verbose_name_plural': 'Кранштейны для телевизоров'},
        ),
        migrations.AlterModelOptions(
            name='ebook',
            options={'verbose_name': 'Электронная книга', 'verbose_name_plural': 'Электронные книги'},
        ),
        migrations.AlterModelOptions(
            name='hairclipper',
            options={'verbose_name': 'Машинка для стрижки волос', 'verbose_name_plural': 'Машинки для стрижки волос'},
        ),
        migrations.AlterModelOptions(
            name='hairdryer',
            options={'verbose_name': 'Фен', 'verbose_name_plural': 'Фены'},
        ),
        migrations.AlterModelOptions(
            name='smartphone',
            options={'verbose_name': 'Смартфон', 'verbose_name_plural': 'Смартфоны'},
        ),
        migrations.AlterModelOptions(
            name='smartwatch',
            options={'verbose_name': 'Смартчасы', 'verbose_name_plural': 'Смартчасы'},
        ),
        migrations.AlterModelOptions(
            name='tablet',
            options={'verbose_name': 'Планшет', 'verbose_name_plural': 'Планшеты'},
        ),
        migrations.AlterModelOptions(
            name='tv',
            options={'verbose_name': 'Телевизор', 'verbose_name_plural': 'Телевизоры'},
        ),
        migrations.RenameField(
            model_name='ebook',
            old_name='disolay_diagonal',
            new_name='display_diagonal',
        ),
        migrations.RenameField(
            model_name='ebook',
            old_name='dispaly_resolution',
            new_name='display_resolution',
        ),
        migrations.RenameField(
            model_name='tablet',
            old_name='screenresolutin',
            new_name='screen_resolutin',
        ),
    ]
